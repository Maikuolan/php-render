<?php 

namespace PHPR\Mesh;

use PHPR\Math\Vec3;
use PHPR\Mesh\Vertex\VertexPNU;

class Primitives
{
    public static function cube() : VertexArray
    {
        return new VertexArray(VertexPNU::class, [
            // position        // normal        // uv
            // front
             1.0, -1.0, -1.0,  0.0,  0.0, -1.0, 1.0, 0.0,
            -1.0, -1.0, -1.0,  0.0,  0.0, -1.0, 0.0, 0.0,
             1.0,  1.0, -1.0,  0.0,  0.0, -1.0, 1.0, 1.0,
            -1.0,  1.0, -1.0,  0.0,  0.0, -1.0, 0.0, 1.0,
             1.0,  1.0, -1.0,  0.0,  0.0, -1.0, 1.0, 1.0,
            -1.0, -1.0, -1.0,  0.0,  0.0, -1.0, 0.0, 0.0,
            // back
            -1.0, -1.0,  1.0,  0.0,  0.0,  1.0, 0.0, 0.0,
             1.0, -1.0,  1.0,  0.0,  0.0,  1.0, 1.0, 0.0,
             1.0,  1.0,  1.0,  0.0,  0.0,  1.0, 1.0, 1.0,
             1.0,  1.0,  1.0,  0.0,  0.0,  1.0, 1.0, 1.0,
            -1.0,  1.0,  1.0,  0.0,  0.0,  1.0, 0.0, 1.0,
            -1.0, -1.0,  1.0,  0.0,  0.0,  1.0, 0.0, 0.0,
            // left
            -1.0,  1.0,  1.0, -1.0,  0.0,  0.0, 1.0, 0.0,
            -1.0,  1.0, -1.0, -1.0,  0.0,  0.0, 1.0, 1.0,
            -1.0, -1.0, -1.0, -1.0,  0.0,  0.0, 0.0, 1.0,
            -1.0, -1.0, -1.0, -1.0,  0.0,  0.0, 0.0, 1.0,
            -1.0, -1.0,  1.0, -1.0,  0.0,  0.0, 0.0, 0.0,
            -1.0,  1.0,  1.0, -1.0,  0.0,  0.0, 1.0, 0.0,
            // right
             1.0,  1.0,  1.0,  1.0,  0.0,  0.0, 1.0, 0.0,
             1.0,  1.0, -1.0,  1.0,  0.0,  0.0, 1.0, 1.0,
             1.0, -1.0, -1.0,  1.0,  0.0,  0.0, 0.0, 1.0,
             1.0, -1.0, -1.0,  1.0,  0.0,  0.0, 0.0, 1.0,
             1.0, -1.0,  1.0,  1.0,  0.0,  0.0, 0.0, 0.0,
             1.0,  1.0,  1.0,  1.0,  0.0,  0.0, 1.0, 0.0,
            // top
            -1.0, -1.0, -1.0,  0.0, -1.0,  0.0, 0.0, 1.0,
             1.0, -1.0, -1.0,  0.0, -1.0,  0.0, 1.0, 1.0,
             1.0, -1.0,  1.0,  0.0, -1.0,  0.0, 1.0, 0.0,
             1.0, -1.0,  1.0,  0.0, -1.0,  0.0, 1.0, 0.0,
            -1.0, -1.0,  1.0,  0.0, -1.0,  0.0, 0.0, 0.0,
            -1.0, -1.0, -1.0,  0.0, -1.0,  0.0, 0.0, 1.0,
            // bottom
             1.0,  1.0, -1.0,  0.0,  1.0,  0.0, 1.0, 1.0,
            -1.0,  1.0, -1.0,  0.0,  1.0,  0.0, 0.0, 1.0,
             1.0,  1.0,  1.0,  0.0,  1.0,  0.0, 1.0, 0.0,
            -1.0,  1.0,  1.0,  0.0,  1.0,  0.0, 0.0, 0.0,
             1.0,  1.0,  1.0,  0.0,  1.0,  0.0, 1.0, 0.0,
            -1.0,  1.0, -1.0,  0.0,  1.0,  0.0, 0.0, 1.0,
        ]);
    }

    public static function cubeSimple() : VertexArray
    {
        return new VertexArray(Vertex::class, [
            // position
            -1.0,  1.0, -1.0,
            -1.0, -1.0, -1.0,
             1.0, -1.0, -1.0,
             1.0, -1.0, -1.0,
             1.0,  1.0, -1.0,
            -1.0,  1.0, -1.0,

            -1.0, -1.0,  1.0,
            -1.0, -1.0, -1.0,
            -1.0,  1.0, -1.0,
            -1.0,  1.0, -1.0,
            -1.0,  1.0,  1.0,
            -1.0, -1.0,  1.0,

             1.0, -1.0, -1.0,
             1.0, -1.0,  1.0,
             1.0,  1.0,  1.0,
             1.0,  1.0,  1.0,
             1.0,  1.0, -1.0,
             1.0, -1.0, -1.0,

            -1.0, -1.0,  1.0,
            -1.0,  1.0,  1.0,
             1.0,  1.0,  1.0,
             1.0,  1.0,  1.0,
             1.0, -1.0,  1.0,
            -1.0, -1.0,  1.0,

            -1.0,  1.0, -1.0,
             1.0,  1.0, -1.0,
             1.0,  1.0,  1.0,
             1.0,  1.0,  1.0,
            -1.0,  1.0,  1.0,
            -1.0,  1.0, -1.0,

            -1.0, -1.0, -1.0,
            -1.0, -1.0,  1.0,
             1.0, -1.0, -1.0,
             1.0, -1.0, -1.0,
            -1.0, -1.0,  1.0,
             1.0, -1.0,  1.0
        ]);
    }
}
